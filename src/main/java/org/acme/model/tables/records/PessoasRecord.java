/*
 * This file is generated by jOOQ.
 */
package org.acme.model.tables.records;


import java.util.UUID;

import org.acme.model.tables.Pessoas;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PessoasRecord extends UpdatableRecordImpl<PessoasRecord> implements Record5<UUID, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.PESSOAS.ID</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.PESSOAS.ID</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.PESSOAS.APELIDO</code>.
     */
    public void setApelido(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.PESSOAS.APELIDO</code>.
     */
    public String getApelido() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.PESSOAS.NASCIMENTO</code>.
     */
    public void setNascimento(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.PESSOAS.NASCIMENTO</code>.
     */
    public String getNascimento() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.PESSOAS.NOME</code>.
     */
    public void setNome(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.PESSOAS.NOME</code>.
     */
    public String getNome() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.PESSOAS.STACK</code>.
     */
    public void setStack(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.PESSOAS.STACK</code>.
     */
    public String getStack() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Pessoas.PESSOAS.ID;
    }

    @Override
    public Field<String> field2() {
        return Pessoas.PESSOAS.APELIDO;
    }

    @Override
    public Field<String> field3() {
        return Pessoas.PESSOAS.NASCIMENTO;
    }

    @Override
    public Field<String> field4() {
        return Pessoas.PESSOAS.NOME;
    }

    @Override
    public Field<String> field5() {
        return Pessoas.PESSOAS.STACK;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getApelido();
    }

    @Override
    public String component3() {
        return getNascimento();
    }

    @Override
    public String component4() {
        return getNome();
    }

    @Override
    public String component5() {
        return getStack();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getApelido();
    }

    @Override
    public String value3() {
        return getNascimento();
    }

    @Override
    public String value4() {
        return getNome();
    }

    @Override
    public String value5() {
        return getStack();
    }

    @Override
    public PessoasRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public PessoasRecord value2(String value) {
        setApelido(value);
        return this;
    }

    @Override
    public PessoasRecord value3(String value) {
        setNascimento(value);
        return this;
    }

    @Override
    public PessoasRecord value4(String value) {
        setNome(value);
        return this;
    }

    @Override
    public PessoasRecord value5(String value) {
        setStack(value);
        return this;
    }

    @Override
    public PessoasRecord values(UUID value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PessoasRecord
     */
    public PessoasRecord() {
        super(Pessoas.PESSOAS);
    }

    /**
     * Create a detached, initialised PessoasRecord
     */
    public PessoasRecord(UUID id, String apelido, String nascimento, String nome, String stack) {
        super(Pessoas.PESSOAS);

        setId(id);
        setApelido(apelido);
        setNascimento(nascimento);
        setNome(nome);
        setStack(stack);
        resetChangedOnNotNull();
    }
}
